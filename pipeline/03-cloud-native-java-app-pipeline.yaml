---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cloud-native-java-app
  namespace: openshift
  labels:
    pipeline.openshift.io/runtime: java
    pipeline.openshift.io/type: kubernetes
spec:
  description: >-
    The Pipline to buld and deploy the Hello Tekton Java App https://github.com/JonkeyGuan/tekton-demo as a deployment.
  params:
    - name: IMAGE_NAME
      description: >-
        The fully qualified image name e.g example.com/tekton-demo/tekton-demo
      default: image-registry.openshift-image-registry.svc:5000/tekton-demo/tekton-demo:latest
    - name: APP_NAME
      description: The app name
    - name: GITHUB_REPO_URL
      description: The GitHub Repo of the Java Application
      default: https://github.com/JonkeyGuan/tekton-demo
    - name: GITHUB_REPO_REVISION
      description: The GitHub revision to use
      default: main
  workspaces:
    - name: source
    - name: maven-settings
  tasks:
    - name: clone-sources
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.GITHUB_REPO_URL)
        - name: revision
          value: $(params.GITHUB_REPO_REVISION)
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: source
    - name: build-test
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - clone-sources
      params:
        - name: GOALS
          value:
            - 'clean'
            - 'test'
      workspaces:
        - name: source
          workspace: source
        - name: maven-settings
          workspace: maven-settings
    - name: build-binary
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - build-test
      params:
        - name: GOALS
          value:
            - '-DskipTests'
            - 'clean'
            - 'package'
      workspaces:
        - name: source
          workspace: source
        - name: maven-settings
          workspace: maven-settings
    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - build-binary
      params:
        - name: IMAGE
          value: '$(params.IMAGE_NAME)'
        - name: TLSVERIFY
          value: 'false'
      workspaces:
        - name: source
          workspace: source
    - name: apply-manifests
      taskRef:
        name: apply-manifests
        kind: ClusterTask
      workspaces:
      - name: source
        workspace: source
      runAfter:
      - build-image
    - name: update-deployment
      taskRef:
        name: update-deployment
        kind: ClusterTask
      params:
      - name: deployment
        value: $(params.APP_NAME)
      - name: IMAGE
        value: $(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)
      runAfter:
      - apply-manifests  